import React, { useEffect, useState } from 'react'
import "./productdetail.scss"
import SubmitButton from '@/components/button/ButtonSubmit'
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import { useParams } from 'react-router-dom';
import { useSelector } from 'react-redux';
import { Product } from '@/interface';
import { StoreType } from '@/stores';
import api from '@/services/api';


export default function ProductDetail() {
    const {id}:any = useParams()

    const productStore: any = useSelector((store: StoreType) => {
        return store.productStore;
    });
    const userStore = useSelector((store: StoreType) => {
        return store.userStore
       
    })
    console.log("üöÄ ~ file: ProductDetail.tsx:24 ~ userStore ~ userStore:", userStore)
    const [isActive, setIsActive] = useState(null);


    const handleClicks = (index: any) => {
        setIsActive(index);
      
    };
    const [optionsIndex,setOptionsIndex]=useState(0)
    const [product, setProduct]= useState<Product | null>(null);
    console.log("üöÄ ~ file: ProductDetail.tsx:34 ~ ProductDetail ~ product:", product)
    const [quantity, setQuantity]=useState(1)
    const [quantitys, setQuantitys]=useState(0)
  
    useEffect(()=>{
       if(id){
        api.productApi.findProductById(id)
        .then((res) => {
            console.log("ress",res.data[0]);
            setProduct(res.data[0])
        }).catch((err) => {
            
        });
       }
    },[id])
    function handleAddtocart(){
        if(userStore.socket) {
            userStore.socket.emit("addToCart", {
                receiptId: userStore.cart?.id,
                optionId: product?.product_options[optionsIndex].id,
                quantity: quantity
            })
        }
    }

    function handleChangeImage(url: string) {
        const mainImage = document.querySelector('.main__product__image') as HTMLImageElement;
        if (mainImage) {
            mainImage.src = url;
        }
    }
  return (
    <div className='container_productdetail'>
       
           
                <div className='product_detail'>
                <>
                  <div key={product?.id} className='img'>
                  <div className="img_item">  
                   <img src={product?.pictures[0].url} alt=""  className='main__product__image'  />
                   </div>
                  <div className="img_detail">
                    {product?.pictures.map((picture:any)=>( <div className="detail">
                          <img src={picture.url} alt="" onMouseOver={() => handleChangeImage(picture.url)} />
                    </div>))}

                  </div>
            </div>
            <div className='item'>
                <div className="title">
                    <div className='product_title'>
                          <h1>{product?.name}</h1>
                          <p>{product?.price}ƒë</p>
                          <div className='size'>
                              <div>K√≠ch c·ª° √°o</div>:
                              {product?.product_options.map((size:any, index:number)=>(  <span  key={ size.id}   className={`custom-span ${isActive === size.id ? 'active' : ''}`} 
                              onClick={() => {handleClicks(size.id), setOptionsIndex(index)}}>{size.name}</span>))}
                               </div>
                         
                    </div>
                    <div className="product_des">
                          <h3>Ch√≠nh s√°ch ƒë·ªïi h√†ng</h3>
                          <span>- Qu·∫ßn , √°o : ƒê∆∞·ª£c ƒë·ªïi h√†ng trong v√≤ng 30 ng√†y k·ªÉ t·ª´ ng√†y mua . - Gi√†y d√©p , √°o len : ƒê∆∞·ª£c ƒë·ªïi trong v√≤ng 07 ng√†y , ƒë∆∞·ª£c b·∫£o h√†nh 60 ng√†y k·ªÉ t·ª´ ng√†y mua . Ph·ª• ki·ªán ( th·∫Øt l∆∞ng , vi , t√∫i x√°ch , ... ) : Kh√¥ng ƒë∆∞·ª£c ƒë·ªïi tr·∫£ , ƒë∆∞·ª£c b·∫£o h√†nh trong v√≤ng 60 ng√†y . - N·ªôi y , caravat , kh·∫©u trang , k·∫πp , n∆° , n√∫t , khƒÉn : Kh√¥ng ƒë·ªïi h√†ng - √Åo ng·ª±c , ƒë·ªì ng·ªß , ƒë·ªì m·∫∑c nh√† , ƒë·ªì th·ªÉ thao , √°o hai d√¢y h√†ng d·ªát : ƒê∆∞·ª£c ƒë·ªïi trong v√≤ng 14 ng√†y</span>
                      
                          <span> M√†u s·∫Øc s·∫£n ph·∫©m tr√™n website v√† th·ª±c t·∫ø c√≥ th·ªÉ ch√™nh l·ªách kh√¥ng ƒë√°ng k·ªÉ ) do ƒëi·ªÅu ki·ªán √°nh s√°ng c·ªßa m√¥i tr∆∞·ªùng v√† thi·∫øt b·ªã c√¥ng ngh·ªá kh√°c nhau .
</span>
                    </div>
                    <div className="product_addtocart">
                        <div className='quantity'>
                       {/* { userStore.cart?.detail.map((item, index) =>{
                        return <input type="number"  defaultValue={item.quantity} onChange={(e) => {
                                userStore.socket?.emit("addToCart", {
                                receiptId: item.receiptId,
                                optionId: item.optionId,
                                quantity: Number(e.target.value)
                              })
                            }}/>
                        })} */}
                       
                             {/*  <span onClick={()=>{if(quantity>1){setQuantity(quantity-1)}}}><i className="fa-solid fa-minus"></i></span> */}<span>{quantity}</span>{/* <span onClick={()=>{setQuantity(quantity+1)}}><i className="fa-solid fa-plus"></i></span> */}
                        </div>
                        <SubmitButton label="Th√™m V√†o Gi·ªè H√†ng" className='button' onClick={handleAddtocart}></SubmitButton>
                    </div>
                </div>
            </div>
                </>
                </div>
     
          
       
        <div className="product_carousel">
          
        </div>
    </div>
  )
}
